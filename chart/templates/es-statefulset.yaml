apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: bolagetio
spec:
  serviceName: elasticsearch-service
  replicas: {{ .Values.elasticsearch.replicas }}
  template:
    metadata:
      labels:
        app: bolagetio
        service: elasticsearch-statefulset
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - elasticsearch-statefulset
              topologyKey: kubernetes.io/hostname
      serviceAccount: elasticsearch
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        image: quay.io/pires/docker-elasticsearch-kubernetes:6.1.2
        resources:
          limits:
            memory: "512Mi"
        env:
        - name: KUBERNETES_CA_CERTIFICATE_FILE
          value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_NAME
          value: "elasticsearch"
        - name: DISCOVERY_SERVICE
          value: "elasticsearch-service"
        - name: NODE_MASTER
          value: "true"
        - name: NODE_DATA
          value: "true"
        - name: HTTP_ENABLE
          value: "true"
        - name: ES_PLUGINS_INSTALL
          value: "analysis-icu"
        - name: ES_JAVA_OPTS
          value: "-Xms256m -Xmx256m"
        - name: NUMBER_OF_MASTERS
          value: "{{ .Values.elasticsearch.numberOfMasters }}"
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 20
          periodSeconds: 10
        volumeMounts:
        - mountPath: /data
          name: storage
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
{{ if .Values.elasticsearch.storageClassName }}
      storageClassName: ssd
{{ end }}
      accessModes: [ ReadWriteOnce ]
      resources:
        requests:
          storage: 1Gi
