apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deployment
  namespace: bolagetio
spec:
  revisionHistoryLimit: 2
  replicas: {{ .Values.web.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: web-deployment
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/web-configmap.yaml") . | sha256sum }}
      labels:
        app: web-deployment
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                    - web-deployment
              topologyKey: kubernetes.io/hostname
      containers:
      - name: web
        image: "{{ .Values.web.image.repository }}:{{ .Values.web.image.tag }}"
        imagePullPolicy: {{ .Values.web.image.pullPolicy | quote }}
{{ if .Values.web.development }}
        command: ["npm", "run", "dev"]
{{ end }}
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        envFrom:
        - configMapRef:
            name: web-config
        ports:
        - containerPort: 3000
        - containerPort: 3001
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 1
          successThreshold: 1
          failureThreshold: 1
        livenessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 1
        lifecycle:
          preStop:
            httpGet:
              path: /prestop
              port: 3001
